name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Init maven repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build CLI
        run: |
          chmod +x mvnw
          ./docker/build.sh

      - name: Push to ECR
        run: |
          repo=public.ecr.aws/y3i6u2n7/datastax-public
          docker_tag=${GITHUB_REF/refs\/tags\/v-/}
          echo "Using docker tag: $docker_tag"
          tag_and_push() {
            image=$1
            docker tag datastax/$image:latest-dev $repo/$image:$docker_tag
            docker push $repo/$image:$docker_tag
          }
          tag_and_push langstream-runtime
          tag_and_push langstream-cli
          tag_and_push langstream-deployer
          tag_and_push langstream-control-plane
          tag_and_push langstream-api-gateway

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "langstream-cli/target/langstream-*.zip,helm/crds/*.yml"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          prerelease: true